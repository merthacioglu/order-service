spring:
  r2dbc:
    username: user
    password: password
    url: r2dbc:postgresql://localhost:5433/polardb_order
    pool:
      max-create-connection-time: 2s
      initial-size: 5
      max-size: 10
  application:
    name: order-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  flyway:
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:postgresql://localhost:5433/polardb_order
    baseline-on-migrate: true

  config:
    import: "optional:configserver:"
  cloud:
    compatibility-verifier:
      enabled: false
    config:
      uri: http://localhost:8888/
    function:
      definition: dispatchOrder
    stream:
      source: acceptOrder
      bindings:
        dispatchOrder-in-0:
          destination: order-dispatched
          group: ${spring.application.name}
        acceptOrder-out-0:
          destination: order-accepted

  rabbitmq:
    host: localhost
    port: 5672
    username: user
    password: password
    connection-timeout: 5s
    bindings:
      acceptOrder-out-0:
        producer:
          transacted: true


server:
  shutdown: graceful
  netty:
    connection-timeout: 2s
  port: 9002
polar:
  catalog-service-url: http://localhost:9001
  greeting: Welcome to the Order Service!
